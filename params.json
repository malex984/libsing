{"name":"Libsing","tagline":"A GAP package for accessing Singular from within GAP","body":"libsing -- a GAP package for interfacing with Singular\r\n=======\r\n\r\nlibsing interfaces to the Singular interface on the kernel level.\r\n\r\nThis differentiates it from e.g. the GAP package \"singular\", which\r\ninstead starts a regular Singular binary as a subprocess,\r\nand communicates with that by sending text commands (just\r\nas a user would), and then parsing the text replies Singular\r\nissues.\r\n\r\nDirectly interfacing with the Singular C kernel is more complicated,\r\nbut has the advantage of avoiding parsing issues due to changed\r\noutput formatting, and also in general tends to be much, much\r\nfaster.\r\n\r\nObtaining libsing\r\n=================\r\nYou can obtain the latest version of libsing from\r\n\r\n  https://github.com/gap-system/libsing\r\n\r\n\r\nRequirements\r\n============\r\nCurrently libsing should work on any UNIX-like platform, including Linux\r\nand Mac OS X.\r\n\r\nRight now, there is no support for Windows, mainly because none of the\r\nlibsing developers uses Windows, but also because running GAP and\r\nSingular on Windows is a bit tricky. If you are interested in Windows\r\nsupport, please contact us.\r\n\r\nYou will likely need the following tools to build libsing:\r\n\r\n* GNU autoconf\r\n* GNU automake\r\n* GNU libtool\r\n* git\r\n\r\nMost Linux distributions (such as Ubuntu, Fedora, Gentoo, ...) already\r\nprovide suitable packages for all of these. On Mac OS X, the most\r\nconvenient way to install them is also via a package manager like Fink,\r\nMacPorts or Homebrew. Alternatively, you can install any of the above\r\nmanually.\r\n   \r\n\r\nCompiling libsing\r\n=================\r\nUnfortunately, libsing cannot simply use an already existing Singular on\r\nyour system. Instead, one has to compile Singular in a special mode to\r\nensure it will be compatible with your GAP installation.\r\n\r\nTherefore, the first step towards compiling libsing is to build such a\r\nspecial version of Singular. Right now, there are two options you have\r\nfor that:\r\n\r\n  I. Use a classic version of Singular (such as 3-1-6)\r\n\r\n II. Use the development version of Singular (a.k.a. \"spielwiese\"),\r\n     which will eventually become Singular 4.0.\r\n\r\nMost regular users will want to use option I for now, but for libsing\r\ndevelopers option II may be interesting to ensure libsing will work\r\nwith future Singular versions.\r\n\r\nThe following instructions should get you going.\r\n\r\n0. If you obtained libsing directly from its git repository, the first thing\r\n   to do is setup its build system. Run this command:\r\n\r\n   ./autogen.sh\r\n\r\n1. Fetch the Singular source code. We provide shell scripts which\r\n   do this for you by directly using the Singular git repository.\r\n   If you want to go with option I, run\r\n     ./fetchsingular\r\n  For option II, run \r\n     ./fetchsingular.sw\r\n\r\n\r\n2. Prepare Singular for compilation, by running\r\n     ./configuresingular\r\n  For option II, run \r\n     ./configuresingular.sw\r\n\r\n3. Compile Singular (this step is separate from step 2 to help libsing\r\n   developers who may wish to modify the Singular code, then recompile it).\r\n     ./makesingular\r\n  For option II, run \r\n     ./makesingular.sw\r\n\r\n4. Prepare libsing for compilation, by running\r\n    ./configure --with-gaproot=PATH_TO_GAP\r\n  For option II, run \r\n    ./configure --with-gaproot=PATH_TO_GAP --with-sw --with-libSingular=$PWD/SW\r\n\r\n5. Compile libsing:\r\n    make\r\n\r\n\r\n\r\nUsing libsing\r\n=============\r\nTODO\r\n\r\n\r\n\r\n\r\nContact\r\n=======\r\nYou can contact the libsing team by sending an email to\r\n\r\n  gapsing AT mathematik DOT uni-kl DOT de\r\n\r\nBug reports or code contributions can be submitted via the issues\r\ntracker respectively via pull requests at\r\n\r\n  https://github.com/gap-system/libsing\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}